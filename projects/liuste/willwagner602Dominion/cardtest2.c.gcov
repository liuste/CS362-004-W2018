        -:    0:Source:cardtest2.c
        -:    0:Graph:cardtest2.gcno
        -:    0:Data:cardtest2.gcda
        -:    0:Runs:1
        -:    0:Programs:1
        -:    1:#include "dominion.h"
        -:    2:#include "dominion_helpers.h"
        -:    3:#include "rngs.h"
        -:    4:#include <string.h>
        -:    5:#include <stdio.h>
        -:    6:#include <math.h>
        -:    7:#include <stdlib.h>
        -:    8:
function assert called 3 returned 100% blocks executed 75%
        3:    9:int assert(int number)
        -:   10:{
        3:   11:	if(number == 0)
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
    #####:   12:		return 0;
        -:   13:	else
        3:   14:		return 1;
        -:   15:}
        -:   16:
function main called 1 returned 100% blocks executed 87%
        1:   17:int main (int argc, char** argv)	{
        -:   18:	struct gameState G;
        -:   19:	int temp;
        -:   20:	
        1:   21:	printf ("\n******Test Great Hall******\n");
call    0 returned 100%
        -:   22:
        1:   23:	G.numActions = 0;
        1:   24:	G.handCount[0] = 1;
        1:   25:	G.hand[0][0] = great_hall;
        1:   26:	temp = cardEffect(great_hall, 0, 0, 0, &G, 0, 0);
call    0 returned 100%
        1:   27:	if (assert(temp == 0))
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0%
        1:   28:		printf("\nTEST SUCCESSFULLY COMPLETED\n");
call    0 returned 100%
        1:   29:	if (assert(G.handCount[0] == 0))
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0%
        1:   30:		printf("\nTEST SUCCESSFULLY COMPLETED\n");
call    0 returned 100%
        -:   31:	else
    #####:   32:		printf("\nFAILED\n");
call    0 never executed
        1:   33:	if (assert(G.numActions == 1))
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0%
        1:   34:		printf("\nTEST SUCCESSFULLY COMPLETED\n");
call    0 returned 100%
        -:   35:	else 
    #####:   36:		printf("\nFAILED\n");
call    0 never executed
        1:   37:	return 0;
        -:   38:}
